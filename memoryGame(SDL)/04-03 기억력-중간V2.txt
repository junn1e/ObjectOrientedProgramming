#include <stdio.h> 
#include <iostream>
#include <SDL.h> 
#include <SDL_image.h>
#include <SDL_messagebox.h>
#include <time.h>
#include <stdlib.h>

#define WIDTH 130*4
#define HEIGHT 130*4

typedef struct {
    SDL_Rect rect;
    int dx, dy;
    SDL_Texture* texture;
} Card4Memory;

int main(int argc, char* argv[]) {
    SDL_Window* window = NULL;
    SDL_Renderer* renderer = NULL;
    SDL_Surface* imageSurface[16];
    SDL_Texture* texture = NULL;
    SDL_Rect destRect;

    Card4Memory card4Game[16];

    // SDL 초기화
    if (SDL_Init(SDL_INIT_VIDEO) < 0) {
        printf("SDL Initialization Fail: %s\n", SDL_GetError());
        return 1;
    }

    // 윈도우 창 생성
    window = SDL_CreateWindow("SDL Memory Game",
        SDL_WINDOWPOS_UNDEFINED,
        SDL_WINDOWPOS_UNDEFINED,
        WIDTH, HEIGHT,
        SDL_WINDOW_SHOWN);

    if (!window) {
        printf("SDL Initialization Fail: %s\n", SDL_GetError());
        SDL_Quit();
        return 1;
    }

    renderer = SDL_CreateRenderer(window, -1, 0);
    IMG_Init(IMG_INIT_JPG | IMG_INIT_PNG);

    char cardImage[8][16] = { "imgs/free01.png", "imgs/free02.png", "imgs/free03.png", "imgs/free04.png",
                              "imgs/free05.png", "imgs/free06.png", "imgs/free07.png", "imgs/free08.png" };
    int card[16] = { 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7 };
    int cardtemp[16];
    int i, j, temp1, temp2;

    srand(time(NULL));

    for (i = 0; i < 16; i++) cardtemp[i] = rand();

    for (i = 15; i > 0; i--) {
        for (j = 0; j < i; j++) {
            if (cardtemp[j] > cardtemp[j + 1]) {
                temp1 = cardtemp[j];
                cardtemp[j] = cardtemp[j + 1];
                cardtemp[j + 1] = temp1;

                temp2 = card[j];
                card[j] = card[j + 1];
                card[j + 1] = temp2;
            }
        }
    }

    for (i = 0; i < 16; i++) imageSurface[i] = IMG_Load(cardImage[card[i]]);
    for (i = 0; i < 16; i++) card4Game[i].texture = SDL_CreateTextureFromSurface(renderer, imageSurface[i]);
    for (i = 0; i < 4; i++) {
        card4Game[4 * i + 0].rect = { 0 * imageSurface[0]->w + 1, i * imageSurface[0]->h + 1, imageSurface[0]->w, imageSurface[0]->h };
        card4Game[4 * i + 1].rect = { 1 * imageSurface[0]->w + 2, i * imageSurface[0]->h + 1, imageSurface[0]->w, imageSurface[0]->h };
        card4Game[4 * i + 2].rect = { 2 * imageSurface[0]->w + 3, i * imageSurface[0]->h + 1, imageSurface[0]->w, imageSurface[0]->h };
        card4Game[4 * i + 3].rect = { 3 * imageSurface[0]->w + 4, i * imageSurface[0]->h + 1, imageSurface[0]->w, imageSurface[0]->h };
    }

    for (i = 0; i < 16; i++) SDL_RenderCopy(renderer, card4Game[i].texture, NULL, &card4Game[i].rect);
    SDL_RenderPresent(renderer);

    SDL_Delay(4000);

    for (i = 0; i < 16; i++) imageSurface[i] = IMG_Load("imgs/free09.png");
    for (i = 0; i < 16; i++) card4Game[i].texture = SDL_CreateTextureFromSurface(renderer, imageSurface[i]);
    for (i = 0; i < 4; i++) {
        card4Game[4 * i + 0].rect = { 0 * imageSurface[0]->w + 1, i * imageSurface[0]->h + 1, imageSurface[0]->w, imageSurface[0]->h };
        card4Game[4 * i + 1].rect = { 1 * imageSurface[0]->w + 2, i * imageSurface[0]->h + 1, imageSurface[0]->w, imageSurface[0]->h };
        card4Game[4 * i + 2].rect = { 2 * imageSurface[0]->w + 3, i * imageSurface[0]->h + 1, imageSurface[0]->w, imageSurface[0]->h };
        card4Game[4 * i + 3].rect = { 3 * imageSurface[0]->w + 4, i * imageSurface[0]->h + 1, imageSurface[0]->w, imageSurface[0]->h };
    }

    // 메시지 루프
    SDL_Event event;
    int quit = 0;
    while (!quit)
    {
        while (SDL_PollEvent(&event))
        {
            switch (event.type)
            {
            case SDL_KEYDOWN:
                if (event.key.keysym.sym == SDLK_ESCAPE) {
                    quit = 1;
                }
                break;
            case SDL_MOUSEBUTTONDOWN:
                quit = 1;
                break;
            case SDL_QUIT:
                quit = 1;
                break;
            default:
                break;
            }
        }

        for (i = 0; i < 16; i++) SDL_RenderCopy(renderer, card4Game[i].texture, NULL, &card4Game[i].rect);
        SDL_RenderPresent(renderer);
    }

    // 종료
    for (i = 0; i < 16; i++) {
        SDL_DestroyTexture(card4Game[i].texture);
        SDL_FreeSurface(imageSurface[i]);
    }

    IMG_Quit();
    SDL_DestroyRenderer(renderer);
    SDL_DestroyWindow(window);
    SDL_Quit();
    return 0;
}